<!DOCTYPE html>

<html lang="en"><head><meta charset="utf-8"/><meta content="width=device-width, initial-scale=1.0" name="viewport"/><title>Discrete Solvers · DifferentialEquations.jl</title><link href="https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.min.css" rel="stylesheet" type="text/css"/><link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.5.0/styles/default.min.css" rel="stylesheet" type="text/css"/><link href="https://fonts.googleapis.com/css?family=Lato|Ubuntu+Mono" rel="stylesheet" type="text/css"/><link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet" type="text/css"/><link href="../assets/documenter.css" rel="stylesheet" type="text/css"/><script>documenterBaseURL=".."</script><script data-main="../assets/documenter.js" src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.2.0/require.min.js"></script><script src="../../versions.js"></script><link href="https://docs.juliadiffeq.org/stable/solvers/discrete_solve/index.html" rel="canonical"/></head><body><nav class="toc"><a href="../index.html"><img alt="DifferentialEquations.jl logo" class="logo" src="../assets/logo.png"/></a><h1>DifferentialEquations.jl</h1><form action="../search.html" class="search"><select id="version-selector" onchange="window.location.href=this.value"><option disabled="disabled" selected="selected" value="#">Version</option></select><input id="search-query" name="q" placeholder="Search docs" type="text"/></form><ul><li><a class="toctext" href="../index.html">Home</a></li><li><span class="toctext">Tutorials</span><ul><li><a class="toctext" href="../tutorials/ode_example.html">Ordinary Differential Equations</a></li><li><a class="toctext" href="../tutorials/sde_example.html">Stochastic Differential Equations</a></li><li><a class="toctext" href="../tutorials/dde_example.html">Delay Differential Equations</a></li><li><a class="toctext" href="../tutorials/dae_example.html">Differential Algebraic Equations</a></li><li><a class="toctext" href="../tutorials/discrete_stochastic_example.html">Discrete Stochastic (Gillespie) Equations</a></li><li><a class="toctext" href="../tutorials/jump_diffusion.html">Jump Diffusion Equations</a></li><li><a class="toctext" href="../tutorials/fempoisson_example.html">Poisson Equation Finite Element Method</a></li><li><a class="toctext" href="../tutorials/femheat_example.html">Heat Equation Finite Element Method</a></li><li><a class="toctext" href="../tutorials/femstochastic_example.html">Stochastic Finite Element Method</a></li></ul></li><li><span class="toctext">Basics</span><ul><li><a class="toctext" href="../basics/overview.html">Overview of DifferentialEquations.jl</a></li><li><a class="toctext" href="../basics/common_solver_opts.html">Common Solver Options</a></li><li><a class="toctext" href="../basics/solution.html">Solution Handling</a></li><li><a class="toctext" href="../basics/plot.html">Plot Functions</a></li><li><a class="toctext" href="../basics/integrator.html">Integrator Interface</a></li><li><a class="toctext" href="../basics/compatibility_chart.html">Solver Compatibility Chart</a></li></ul></li><li><span class="toctext">Equation Types</span><ul><li><a class="toctext" href="../types/discrete_types.html">Discrete Types</a></li><li><a class="toctext" href="../types/ode_types.html">ODE Types</a></li><li><a class="toctext" href="../types/sde_types.html">SDE Types</a></li><li><a class="toctext" href="../types/dde_types.html">DDE Types</a></li><li><a class="toctext" href="../types/dae_types.html">DAE Types</a></li><li><a class="toctext" href="../types/jump_types.html">Jump Types</a></li><li><a class="toctext" href="../types/fem_types.html">FEM Types</a></li><li><a class="toctext" href="../types/stokes_types.html">Stokes Types</a></li></ul></li><li><span class="toctext">Solver Algorithms</span><ul><li class="current"><a class="toctext" href="discrete_solve.html">Discrete Solvers</a><ul class="internal"><li><a class="toctext" href="#Recommended-Methods-1">Recommended Methods</a></li></ul></li><li><a class="toctext" href="ode_solve.html">ODE Solvers</a></li><li><a class="toctext" href="sde_solve.html">SDE Solvers</a></li><li><a class="toctext" href="dde_solve.html">DDE Solvers</a></li><li><a class="toctext" href="dae_solve.html">DAE Solvers</a></li><li><a class="toctext" href="fempoisson_solve.html">FEM Poisson Solvers</a></li><li><a class="toctext" href="femheat_solve.html">FEM Heat Solvers</a></li><li><a class="toctext" href="fdmstokes_solve.html">Stokes Solvers</a></li></ul></li><li><span class="toctext">Additional Features</span><ul><li><a class="toctext" href="../features/performance_overloads.html">Performance Overloads</a></li><li><a class="toctext" href="../features/data_arrays.html">Data Arrays</a></li><li><a class="toctext" href="../features/linear_nonlinear.html">Specifying (Non)Linear Solvers</a></li><li><a class="toctext" href="../features/callback_functions.html">Event Handling and Callback Functions</a></li><li><a class="toctext" href="../features/callback_library.html">Callback Library</a></li><li><a class="toctext" href="../features/monte_carlo.html">Parallel Monte Carlo Simulations</a></li><li><a class="toctext" href="../features/mesh.html">Meshes</a></li><li><a class="toctext" href="../features/output_specification.html">Output Specification</a></li><li><a class="toctext" href="../features/progress_bar.html">Juno Progress Bar Integration</a></li></ul></li><li><span class="toctext">Analysis Tools</span><ul><li><a class="toctext" href="../analysis/parameterized_functions.html">ParameterizedFunctions</a></li><li><a class="toctext" href="../analysis/parameter_estimation.html">Parameter Estimation</a></li><li><a class="toctext" href="../analysis/sensitivity.html">Sensitivity Analysis</a></li><li><a class="toctext" href="../analysis/uncertainty_quantification.html">Uncertainty Quantification</a></li><li><a class="toctext" href="../analysis/dev_and_test.html">Algorithm Development and Testing</a></li></ul></li><li><span class="toctext">Modeling Tools</span><ul><li><a class="toctext" href="../models/multiscale.html">Multi-Scale Models</a></li><li><a class="toctext" href="../models/financial.html">Financial Models</a></li><li><a class="toctext" href="../models/biological.html">Biological Models</a></li></ul></li></ul></nav><article id="docs"><header><nav><ul><li>Solver Algorithms</li><li><a href="discrete_solve.html">Discrete Solvers</a></li></ul><a class="edit-page" href="https://github.com/JuliaDiffEq/DiffEqDocs.jl/tree/671b207a47610e2e0b7d00ccf4120b457f61e11d/docs/src/solvers/discrete_solve.md"><span class="fa"></span> Edit on GitHub</a></nav><hr/></header><h1><a class="nav-anchor" href="#Discrete-Solvers-1" id="Discrete-Solvers-1">Discrete Solvers</a></h1><p><code>solve(prob::DiscreteProblem,alg;kwargs)</code></p><p>Solves the discrete function map defined by <code>prob</code> using the algorithm <code>alg</code>. If no algorithm is given, a default algorithm will be chosen.</p><h2><a class="nav-anchor" href="#Recommended-Methods-1" id="Recommended-Methods-1">Recommended Methods</a></h2><p>The implementation for solving discrete equations is the <code>Discrete</code> algorithm in OrdinaryDiffEq.jl. It has zero overhead and uses compilation to build a separate setup that allows you to use the common interface (including events/callbacks) to solve function maps, along with everything else like plot recipes, while completely ignoring the ODE functionality related to continuous equations (except for a tiny bit of initialization).</p><h4><a class="nav-anchor" href="#Discrete-Algorithm-1" id="Discrete-Algorithm-1">Discrete Algorithm</a></h4><p>OrdinaryDiffEq.jl also contains the <code>Discrete</code> algorithm which lets you solve a problem where <code>f</code> is a map: <span>$u_{n+1} = f(t_n,u_n)$</span>. It has a piecewise constant interpolation and allows for all of the callback/event handling capabilities (of course, with <code>rootfind=false</code>. If a <code>ContinuousCallback</code> is given, it's always assumed <code>rootfind=false</code>).</p><p>The constructor is:</p><pre><code class="language-julia">Discrete(;apply_map=false,scale_by_time=false)</code></pre><p>If <code>apply_map=false</code>, <code>f</code> is completely ignored. If <code>apply_map=true</code>, then every step is the update</p><div>\[u_{n+1} = f(t_n,u_n).\]</div><p>If in addition <code>scale_by_time=true</code>, then every step is the update</p><div>\[u_{n+1} = u_n + dtf(t_n,u_n).\]</div><p>Notice that this is the same as updates from the Euler method, except in this case we assume that its a discrete change and thus the interpolation is piecewise constant.</p><p>As a shorthand,</p><pre><code class="language-julia">FunctionMap(scale_by_time=false)</code></pre><p>is a <code>Discrete</code> with <code>apply_map=true</code>, and thus corresponds to the function map equation</p><div>\[u_{n+1} = f(t_n,u_n).\]</div><footer><hr/><a class="previous" href="../types/stokes_types.html"><span class="direction">Previous</span><span class="title">Stokes Types</span></a><a class="next" href="ode_solve.html"><span class="direction">Next</span><span class="title">ODE Solvers</span></a></footer></article></body></html>
